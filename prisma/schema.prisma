generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model Store {
  id        String      @id @default(uuid())
  name      String
  billboard Billboard[] @relation("storeBillboard")
  userId    String
  createdAt DateTime    @default(now())
  updatedAt DateTime    @updatedAt
  Category  Category[]  @relation("store category")
  sizes     Size[]      @relation("store size")
  colors    Color[]     @relation("store color")
  products  Product[]   @relation("store product")
}

model Billboard {
  id        String     @id @default(uuid())
  storeId   String
  store     Store      @relation("storeBillboard", fields: [storeId], references: [id])
  label     String
  imageUrl  String
  createdAt DateTime   @default(now())
  updatedAt DateTime   @updatedAt
  Category  Category[]

  @@index([storeId])
}

model Category {
  id          String    @id @default(uuid())
  storeId     String
  store       Store     @relation("store category", fields: [storeId], references: [id])
  billboardId String
  billboard   Billboard @relation(fields: [billboardId], references: [id])
  name        String
  createdAt   DateTime  @default(now())
  updatedAt   DateTime  @updatedAt
  products    Product[]

  @@index([storeId])
  @@index([billboardId])
}

model Size {
  id        String    @id @default(uuid())
  storeId   String
  store     Store     @relation("store size", fields: [storeId], references: [id])
  name      String
  value     String
  createdAt DateTime  @default(now())
  updatedAt DateTime  @updatedAt
  products  Product[]

  @@index([storeId])
}

model Color {
  id        String    @id @default(uuid())
  storeId   String
  store     Store     @relation("store color", fields: [storeId], references: [id])
  name      String
  value     String
  createdAt DateTime  @default(now())
  updatedAt DateTime  @updatedAt
  products  Product[]
}

model Product {
  id         String   @id @default(uuid())
  storeId    String
  store      Store    @relation("store product", fields: [storeId], references: [id])
  categoryId String
  category   Category @relation(fields: [categoryId], references: [id])
  sizeId     String
  size       Size     @relation(fields: [sizeId], references: [id])
  colorId    String
  color      Color    @relation(fields: [colorId], references: [id])
  name       String
  price      Decimal
  isFeatured Boolean  @default(false)
  isArchived Boolean  @default(false)
  images     Image[]
  createdAt  DateTime @default(now())
  updatedAt  DateTime @updatedAt

  @@index([storeId])
  @@index([colorId])
  @@index([categoryId])
  @@index([sizeId])
}

model Image {
  id        String   @id @default(uuid())
  productId String
  product   Product  @relation(fields: [productId], references: [id])
  url       String
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
}
